
p
source('first_dive.R')
head(main)
source('first_dive.R')
p
rm(list=ls())
source('sec_dive.R')
sum(data$searched)
source('sec_dive.R')
source('sec_dive.R')
source('sec_dive.R')
table(race.search.outcomes$race,race.search.outcomes$cont.found)
?table
race.search.outcomes %>% select(race,cont.found) %>% table
race.search.outcomes %>% select(race,cont.found) %>% table
source('sec_dive.R')
race.search.outcomes
race.search.outcomes %>% fisher.test
95/810
1/21
1/5
5/52
app.key.list(6)
source('sec_dive.R')
source('sec_dive.R')
warn.race = data %>%
    filter(rpt6.warning==1) %>%
    select(race, rpt6.warning) %>%
    table %>%
    fisher.test
source('sec_dive.R')
warn.race
source('sec_dive.R')
warn.race
warn.race
source('sec_dive.R')
source('sec_dive.R')
warn.race
data %>% filter(race %in% c('W','B')) %>% select(race,rpt6.warning)
data %>% filter(race %in% c('W','B')) %>% select(race,rpt6.warning) %>% table
app.key.list(6)
apply(data %>% select( app.key.list(6) ) %>% select(-rpt6.warning), 
                          1,
                          sum)  
data$only.warning = apply(data %>% select( app.key.list(6) ) %>% select(-rpt6.warning), 
                          1,
                          sum)  
max(data$only.warning)
max(data$only.warning) %>% BOOL
max(data$only.warning) %>% bool
max(data$only.warning) %>% as.boolean
max(data$only.warning) %>% as.bool
data$only.warning = apply(data %>% select( app.key.list(6) ) %>% select(-rpt6.warning), 
                          1,
  sum) %>% as.logical
max(data$only.warning)
min(data$only.warning)
set_not
data$only.warning = !(apply(data %>% select( app.key.list(6) ) %>% select(-rpt6.warning), 
                          1,
  sum) %>% as.logical)
sum(data$only.warning)
sum(!data$only.warning)
warn.race = data %>%
    filter(race %in% c('W','B')) %>%
    filter(
    select(race, only.warning) %>%
    table %>%
    fisher.test
source('sec_dive.R')
source('sec_dive.R')
warn.race
warn.race = data %>%
    filter(race %in% c('W','B')) %>%
    select(race, only.warning) %>%
    table 
warn.race
sum(data$only.warning)
sum(data$rpt6.warning)
source('sec_dive.R'_
source('sec_dive.R')
warn.race
sum(data$only.warning)
sum(data$rpt6.warning)
pbeta
unif.beta.updated = function(x, outcome_vec, alpha=1,beta=1){
    x %>% dbeta(alpha + sum(outcome_vec), beta + length(outcome_vec) - sum(outcome_vec)) %>%
return
}
prob.cont.found.given.searched.by.race = function(x,race){ data %>%
                                                               filter(searched==1) %>%
                                                               filter(race==race) %>%
                                                               select(cont.found) %>%
                                                               unif.beta.updated(x,.) %>%
                                                               return }
seq(0,1,1000)
seq(0,1,.1)
seq(0,1,.001)
plot(seq(0,1,.001) %>% prob.cont.found)
prob.cont.given.searched.by.race = function(x,race){ data %>%
                                                         filter(searched==1) %>%
                                                         filter(race==race) %>%
                                                         select(cont.found) %>%
                                                         unif.beta.updated(x,.) %>%
                                                         return }
plot(seq(0,1,.001) %>% prob.cont.given.searched.by.race('B'), type='l' )
seq(0,1,.001) %>% prob.cont.given.searched.by.race('B')
prob.cont.given.searched.by.race(.5,'B')
data %>%
                                                         filter(searched==1) %>%
                                                         filter(race==race) %>%
                                                         select(cont.found) %>%
                                                         unif.beta.updated(x,.)
x-.5
x=.5
data %>%
                                                         filter(searched==1) %>%
                                                         filter(race==race) %>%
                                                         select(cont.found) %>%
                                                         unif.beta.updated(x,.)
 data %>%
                                                         filter(searched==1) %>%
                                                         filter(race==race) %>%
print
data %>%
                                                         filter(searched==1) %>%
                                                         filter(race==race) %>%
                                                         select(cont.found)
prob.cont.given.searched.by.race = function(x,race){ data %>%
                                                         filter(searched==1) %>%
                                                         filter(race==race) %>%
                                                         select(cont.found) %>%
                                                         as.numeric %>%
                                                         unif.beta.updated(x,.) %>%
                                                         return }
seq(0,1,.001) %>% prob.cont.given.searched.by.race
data %>%
                                                         filter(searched==1) %>%
                                                         filter(race==race) %>%
                                                         select(cont.found) %>%
                                                         as.numeric
data %>%
                                                         filter(searched==1) %>%
                                                         filter(race==race) %>%
                                                         select(cont.found) %>%
                                                         class
foo = =
foo = data %>%
                                                         filter(searched==1) %>%
                                                         filter(race==race) %>%
                                                         select(cont.found) 
foo
head(foo)
as.numeric(foo)
as.logical(foo)
foo[,1]
data %>%
                                                         filter(searched==1) %>%
                                                         filter(race==race) %>%
                                                         select(cont.found) %>%
                                                         unif.beta.updated(x,.[,1
])
as.matrix(data$cont.found)
as.numeric(data$cont.found)
data %>%
                                                         filter(searched==1) %>%
                                                         filter(race==race) %>%
                                                         select(cont.found) %>% as.matrix
                                                         select(cont.found) %>% as.matrixdata %>%
                                                         filter(searched==1) %>%
                                                         filter(race==race) %>%
                                                         select(cont.found) %>% 
                                                         as.matrix
                                                         unif.beta.updated(x,.
Fdaf
data %>%
                                                         filter(searched==1) %>%
                                                         filter(race==race) %>%
                                                         select(cont.found) %>% 
                                                         as.matrix
                                                         unif.beta.updated(x,.
data %>%
                                                         filter(searched==1) %>%
                                                         filter(race==race) %>%
                                                         select(cont.found) %>% 
                                                         as.matrix
                                                         unif.beta.updated(x,.)
data %>%
                                                         filter(searched==1) %>%
                                                         filter(race==race) %>%
                                                         select(cont.found) %>% 
                                                         as.matrix %>%
                                                         unif.beta.updated(x,.
)
prob.cont.given.searched.by.race = function(x,race){ data %>%
                                                         filter(searched==1) %>%
                                                         filter(race==race) %>%
                                                         select(cont.found) %>% 
                                                         as.matrix %>%
                                                         unif.beta.updated(x,.) %>%
                                                         return }
seq(0,1,.001) %>% prob.cont.given.searched.by.race
plot(seq(0,1,.001) %>% prob.cont.given.searched.by.race,type='l')
plot(seq(0,1,.001) %>% prob.cont.given.searched.by.race('B'),type='l')
plot(seq(0,1,.001) %>% prob.cont.given.searched.by.race('W'),type='l')
plot(seq(0,1,.001) %>% prob.cont.given.searched.by.race('U'),type='l')
prob.cont.given.searched.by.race = function(x,race){ data %>%
                                                         filter(searched==1) %>%
                                                         filter(race==race) %>%
                                                         select(cont.found) %>% 
                                                         as.matrix %>%
                                                         #                                    \
                     unif.beta.updated(x,.) %>%                                                
                                                         length %>%
                                                         return }
prob.cont.given.search.by.race(.1,'W')
prob.cont.given.searched.by.race = function(x,race){ data %>%
                                                         filter(searched==1) %>%
                                                         filter(race==race) %>%
                                                         select(cont.found) %>% 
                                                         as.matrix %>%
                                                         #unif.beta.updated(x,.) %>%           
                                                         length %>%
                                                         return }
prob.cont.given.search.by.race(.1,'w')
prob.cont.given.searched.by.race(.1,'w')
prob.cont.given.searched.by.race(.1,'W')
prob.cont.given.searched.by.race(.1,'B')
prob.cont.given.searched.by.race = function(x,r){ data %>%
                                                         filter(searched==1) %>%
                                                         filter(race==r) %>%
                                                         select(cont.found) %>% 
                                                         as.matrix %>%
                                                         length %>%
                                                         return }
prob.cont.given.searched.by.race(.1,'b')
prob.cont.given.searched.by.race(.1,'B')
prob.cont.given.searched.by.race(.1,'W')
prob.cont.given.searched.by.race = function(x,r){ data %>%
                                                         filter(searched==1) %>%
                                                         filter(race==r) %>%
                                                         select(cont.found) %>%
                                                         as.matrix %>%
                                                         unif.beta.update(x,.) %>%
                                                         return }
 
prob.cont.given.searched.by.race(.1,'W')
prob.cont.given.searched.by.race = function(x,r){ data %>%
                                                         filter(searched==1) %>%
                                                         filter(race==r) %>%
                                                         select(cont.found) %>%
                                                         as.matrix %>%
                                                         unif.beta.updated(x,.) %>%
                                                         return }
 
prob.cont.given.searched.by.race(.1,'b')
prob.cont.given.searched.by.race(.1,'B')
prob.cont.given.searched.by.race(.5,'B')
plot(seq(0,1,.001) %>% prob.cont.given.searched.by.race('B'), type='l')
plot(seq(0,1,.001) %>% prob.cont.given.searched.by.race('W'), type='l')
plot(seq(0,1,.001) %>% prob.cont.given.searched.by.race('B'), type='l')
lines(seq(0,1,.001) %>% prob.cont.given.searched.by.race('B'), col='red')
plot(seq(0,1,.001) %>% prob.cont.given.searched.by.race('B'), type='l')
lines(seq(0,1,.001) %>% prob.cont.given.searched.by.race('W'), col='red')
lines(seq(0,1,.001) %>% prob.cont.given.searched.by.race('A'), col='red')
data.frame(lapply(c('W','B','A'), function( seq))))
x = seq(0,1,.001)
data.frame(lapply(c('W','B','A'), function(r){ x %>% prob.cont.given.searched.by.race(x,r)}))
data.frame(lapply(c('W','B','A'), function(r){x %>% prob.cont.given.searched.by.race(x,r)}))
data.frame(sapply(c('W','B','A'), function(r){x %>% prob.cont.given.searched.by.race(x,r)}))
data.frame(sapply(c('W','B','A'), function(r){x %>% prob.cont.given.searched.by.race(x,r)}))
data.frame(sapply(c('W','B','A'), function(r){x %>% prob.cont.given.searched.by.race(r)}))
data.frame(sapply(c('W','B','A'), function(r){x %>% prob.cont.given.searched.by.race(r)})) %>% head
data$raceeth
data$race %>% unique %>% length
data$raceethn %>% unique %>% length
data.frame(sapply(c('W','B','A'), function(r){x %>% prob.cont.given.searched.by.race(r)})) %>% head
plot.df = sapply(data$raceethn %>% unique,
                 function(r){x %>% prob.cont.given.searched.by.race(r)}) %>% as.data.frame
head(plot.df)
plot.df = sapply(data$raceethn %>% unique %>% as.character,
                 function(r){x %>% prob.cont.given.searched.by.race(r)}) %>% as.data.frame
head(plot.df)
data$raceethn %>% unique %>% as.character %>% head
data$raceethn %>% unique %>% as.character
paste0('c',NA)
paste0('c',NA,na.rm=TRUE)
paste0('c',NONE)
paste0('c',None)
NONE
NA
paste0('c',NA)
?paste0
paste0('c',NA_character_)
names(data)[1:10]
data$raceethn2 = data$race
to.change = data$ethnic=='H'
data$raceethn2[ to.change ] == paste0(data$race[to.change], data$ethnic[to.change])
data$raceethn2 = data$race
to.change = data$ethnic=='H'
data$raceethn2[ to.change ] = paste0(data$race[to.change], data$ethnic[to.change])
to.change = data$ethnic=='H'
data$raceethn2[ to.change ] = paste0(data$race[to.change], data$ethnic[to.change])
data$raceethn2[ to.change ] = paste0(data$race[to.change], data$ethnic[to.change]) %>% as.character
data$raceethn2 = data$race %>% as.character
to.change = data$ethnic=='H'
data$raceethn2[ to.change ] = paste0(data$race[to.change], data$ethnic[to.change])
data$raceethn2
plot.df = sapply(data$raceethn2 %>% unique %>% as.character,
                 function(r){x %>% prob.cont.given.searched.by.race(r)}) %>% as.data.frame
head(plot.df)
plot.df$x=x
?melt
library(reshape2)
?melt
melt(plot.df,by='x')
melt(plot.df)
head(melt(plot.df))
?melt
melt(plot.df,value='x')
?cast
head(plot.df)
?dcast
plot.df %>% melt %>% cast(x ~ .) %>% head
plot.df %>% melt %>% dcast(x ~ .) %>% head
plot.df %>% melt %>% head
plot.df %>% melt(x)
plot.df %>% melt(x) %>% head
plot.df %>% melt('x') %>% head
plot.df$x = x
plot.df %>% melt('x') %>% set_colnames('x','race','posterior')
p = ggplot( plot.df, aes(x=x, y=posterior, color=race, group=race) ) +
    geom_line() 
p
plot.df$x = x
plot.df = plot.df %>% melt('x') %>% set_colnames('x','race','posterior')
p = ggplot( plot.df, aes(x=x, y=posterior, color=race, group=race) ) +
    geom_line() 
p
plot.df$x = x
plot.df = plot.df %>% melt('x') %>% set_colnames('x','race','post')
p = ggplot( plot.df, aes(x=x, y=post, color=race, group=race) ) +
    geom_line() 
p
head(plot.df)
plot.df = sapply(data$raceethn2 %>% unique %>% as.character,
                 function(r){x %>% prob.cont.given.searched.by.race(r)}) %>% as.data.frame
plot.df$x = x
 plot.df %>% melt('x') %>% set_colnames('x','race','post')
plot.df %>% melt('x') %>% set_colnames(c('x','race','post')) %>% head
plot.df$x = x
plot.df = plot.df %>% melt('x') %>% set_colnames(c('x','race','post'))  
p = ggplot( plot.df, aes(x=x, y=post, color=race, group=race) ) +
    geom_line() 
p
p = ggplot( plot.df, aes(x=x, y=post, color=race, group=race) ) +
    geom_line()+
    scale_colour_brewer(palette = 'RdYlGn')
p
plot.df$x = x
plot.df = plot.df %>% melt('x') %>% set_colnames(c('x','race','post'))
p = ggplot( plot.df, aes(x=x, y=post, color=race, group=race) ) +
    geom_line()+
    scale_colour_brewer(palette = 'Accent')
p
x = seq(0,1,.001)
data$raceethn2 = data$race %>% as.character
to.change = data$ethnic=='H'
data$raceethn2[ to.change ] = paste0(data$race[to.change], data$ethnic[to.change])
plot.df = sapply(data$raceethn2 %>% unique %>% as.character,
                 function(r){x %>% prob.cont.given.searched.by.race(r)}) %>% as.data.frame
plot.df$x = x
plot.df = plot.df %>% melt('x') %>% set_colnames(c('x','race','post'))
p = ggplot( plot.df, aes(x=x, y=post, color=race, group=race) ) +
    geom_line()+
    scale_colour_brewer(palette = 'Accent')
p
